name: Go pipeline

on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.7.0

    - name: Set kubecontext
      run: kubectl config use-context kind-chart-testing

    - name: Debug kubeconfig
      run: cat /home/runner/.kube/config

    - name: Echo secret
      run: echo "${{secrets.KUBECONFIG_FILE}}"

    - name: Set environment variable
      run: | 
        echo "KUBECONFIG_FILE<<EOF" >> "$GITHUB_ENV"
        cat /home/runner/.kube/config >> "$GITHUB_ENV"
        echo "EOF" >> "$GITHUB_ENV"

    - name: Debug home
      run: env

    - name: 'Deploy'
      uses: 'vimeda/helm@v1.7.0'
      with:
        release: 'gocd'
        namespace: 'gocd'
        chart: 'gocd/gocd'
        repo: 'https://gocd.github.io/helm-chart'
        repo-alias: 'gocd'
        token: '${{ github.token }}'
      env:
        KUBECONFIG_FILE: '${{env.KUBECONFIG_FILE}}'

    - name: Check ingresses
      run: kubectl get ingress -A

    - name: Unit test
      run: go test -v ./... -tags=unit

    - name: Ensure GoCD server has started
      shell: bash
      run: |
        while true; do
          response=$(curl -s http://localhost:8153/go/api/version | grep "GoCD server is starting" || true)
          if [[ "0" == $(echo -n "$response" | wc -c) ]]; then
            echo "GoCD server has started"
            break
          fi
          echo "Waiting for GoCD server to start. Response: $response"
          sleep 1
        done
    
    - name: Integration test
      run: go test -v ./... -tags=integration

  conventional-commit-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - name: Conventional Commit check
      uses: docker://aevea/commitsar